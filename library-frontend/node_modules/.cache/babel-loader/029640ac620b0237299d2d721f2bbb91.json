{"ast":null,"code":"var _jsxFileName = \"/Users/mpampols/Documents/GitHub/fullstackopen.part8/library-frontend/src/components/Authors.js\";\nimport React, { useState } from 'react';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport Select from 'react-select';\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors  {\n      name\n      born\n      bookCount\n    }\n  }\n`;\nexport const EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $born: Int!) {\n    editAuthor(name: $name, setBornTo: $born) {\n      name\n      born\n    }\n  }\n`;\n\nconst Authors = props => {\n  const result = useQuery(ALL_AUTHORS);\n  const [born, setBorn] = useState('');\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [editAuthor] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }]\n  });\n\n  const submitEdit = async event => {\n    event.preventDefault();\n    const name = selectedOption.value;\n    editAuthor({\n      variables: {\n        name,\n        born\n      }\n    });\n  };\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (result.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const authors = result.data.allAuthors;\n  const selectAuthorOptions = authors.map(author => ({\n    value: author.name,\n    label: author.name\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"born\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"books\")), authors.map(a => React.createElement(\"tr\", {\n    key: a.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, a.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, a.born), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, a.bookCount))))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Set birthday\"), React.createElement(\"form\", {\n    onSubmit: submitEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Author\", React.createElement(Select, {\n    defaultValue: selectedOption,\n    onChange: setSelectedOption,\n    options: selectAuthorOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Born\", React.createElement(\"input\", {\n    type: \"number\",\n    value: born,\n    onChange: ({\n      target\n    }) => setBorn(parseInt(target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"change\")));\n};\n\nexport default Authors;","map":{"version":3,"sources":["/Users/mpampols/Documents/GitHub/fullstackopen.part8/library-frontend/src/components/Authors.js"],"names":["React","useState","gql","useMutation","useQuery","Select","ALL_AUTHORS","EDIT_AUTHOR","Authors","props","result","born","setBorn","selectedOption","setSelectedOption","editAuthor","refetchQueries","query","submitEdit","event","preventDefault","name","value","variables","show","loading","authors","data","allAuthors","selectAuthorOptions","map","author","label","a","bookCount","target","parseInt"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport Select from 'react-select';\n\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors  {\n      name\n      born\n      bookCount\n    }\n  }\n`\n\nexport const EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $born: Int!) {\n    editAuthor(name: $name, setBornTo: $born) {\n      name\n      born\n    }\n  }\n`\n\nconst Authors = (props) => {\n  const result = useQuery(ALL_AUTHORS)\n  const [born, setBorn] = useState('')\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const [ editAuthor ] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [ { query: ALL_AUTHORS } ]\n  })\n\n  const submitEdit = async (event) => {\n    event.preventDefault()\n    const name = selectedOption.value\n    editAuthor({\n      variables: {\n        name,\n        born\n      }\n    })\n  }\n\n  if (!props.show) {\n    return null\n  }\n\n  if (result.loading)  {\n    return <div>loading...</div>\n  }\n\n  const authors = result.data.allAuthors\n\n  const selectAuthorOptions = authors.map((author) => (\n    { value: author.name, label: author.name }\n  ))\n\n  return (\n    <div>\n      <h2>authors</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              born\n            </th>\n            <th>\n              books\n            </th>\n          </tr>\n          {authors.map(a =>\n            <tr key={a.name}>\n              <td>{a.name}</td>\n              <td>{a.born}</td>\n              <td>{a.bookCount}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <h2>Set birthday</h2>\n      <form onSubmit={submitEdit}>\n        <div>\n          Author\n          <Select\n            defaultValue={selectedOption}\n            onChange={setSelectedOption}\n            options={selectAuthorOptions}\n          />\n        </div>\n        <div>\n          Born\n          <input\n            type='number'\n            value={born}\n            onChange={ ({ target }) => setBorn(parseInt(target.value)) }\n          />\n        </div>\n        <button type='submit'>change</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Authors\n"]},"metadata":{},"sourceType":"module"}